// Global variables
let cart = [];
let products = {};

// Cart functions
function toggleCart() {
    const cartOverlay = document.querySelector('.cart-overlay');
    const cartSidebar = document.querySelector('.cart-sidebar');
    
    if (cartOverlay && cartSidebar) {
        cartOverlay.classList.toggle('active');
        cartSidebar.classList.toggle('active');
        document.body.style.overflow = cartOverlay.classList.contains('active') ? 'hidden' : '';
    }
}

function closeCart() {
    const cartOverlay = document.querySelector('.cart-overlay');
    const cartSidebar = document.querySelector('.cart-sidebar');
    
    if (cartOverlay && cartSidebar) {
        cartOverlay.classList.remove('active');
        cartSidebar.classList.remove('active');
        document.body.style.overflow = '';
    }
}

function updateCart() {
    const cartItemsContainer = document.querySelector('.cart-items');
    const cartTotal = document.querySelector('.total-amount');
    const emptyCart = document.querySelector('.empty-cart');
    
    if (!cartItemsContainer) return;
    
    // Clear the cart container
    cartItemsContainer.innerHTML = '';
    
    if (cart.length === 0) {
        // Show empty cart message
        if (emptyCart) emptyCart.style.display = 'flex';
        if (cartTotal) cartTotal.textContent = '0 Ft';
        return;
    }
    
    // Hide empty cart message
    if (emptyCart) emptyCart.style.display = 'none';
    
    // Add each item to the cart
    let total = 0;
    cart.forEach((item, index) => {
        const product = products[item.id];
        if (!product) return;
        
        const itemTotal = product.price * item.quantity;
        total += itemTotal;
        
        const cartItem = document.createElement('div');
        cartItem.className = 'cart-item';
        cartItem.innerHTML = `
            <img src="${product.images[0]}" alt="${product.name}" class="cart-item-image">
            <div class="cart-item-details">
                <h4>${product.name}</h4>
                <div class="cart-item-price">${product.price.toLocaleString()} Ft</div>
                <div class="cart-item-quantity">
                    <button class="quantity-btn minus" data-index="${index}">-</button>
                    <span class="quantity">${item.quantity}</span>
                    <button class="quantity-btn plus" data-index="${index}">+</button>
                </div>
            </div>
            <button class="remove-item" data-index="${index}">&times;</button>
        `;
        
        cartItemsContainer.appendChild(cartItem);
    });
    
    // Update total
    if (cartTotal) cartTotal.textContent = `${total.toLocaleString()} Ft`;
    
    // Save cart to localStorage
    saveCart();
}

function addToCart(product, quantity = 1) {
    const existingItem = cart.find(item => item.id === product.id);
    
    if (existingItem) {
        existingItem.quantity += quantity;
    } else {
        cart.push({
            id: product.id,
            name: product.name,
            price: product.price,
            image: product.image,
            quantity: quantity
        });
    }
    
    updateCart();
    showNotification('Termék hozzáadva a kosárhoz!');
}

function removeFromCart(index) {
    if (index >= 0 && index < cart.length) {
        cart.splice(index, 1);
        updateCart();
    }
}

function updateQuantity(index, change) {
    if (index >= 0 && index < cart.length) {
        cart[index].quantity += change;
        if (cart[index].quantity < 1) {
            cart.splice(index, 1);
        }
        updateCart();
    }
}

function saveCart() {
    localStorage.setItem('cart', JSON.stringify(cart));
}

function showNotification(message, duration = 3000) {
    const notification = document.getElementById('notification');
    if (!notification) return;
    
    const messageEl = notification.querySelector('#notification-message');
    if (messageEl) {
        messageEl.textContent = message;
    }
    
    notification.classList.add('show');
    
    setTimeout(() => {
        notification.classList.remove('show');
    }, duration);
}

// Initialize cart from localStorage
function initCart() {
    const savedCart = localStorage.getItem('cart');
    if (savedCart) {
        try {
            cart = JSON.parse(savedCart);
            console.log('Cart loaded from localStorage:', cart);
        } catch (e) {
            console.error('Error parsing cart from localStorage:', e);
            cart = [];
        }
    }
    updateCart();
}

// Save cart to localStorage
function saveCart() {
    localStorage.setItem('cart', JSON.stringify(cart));
}

// Show notification to user
function showNotification(message, duration = 3000) {
    const notification = document.getElementById('notification');
    const notificationMessage = document.getElementById('notification-message');
    
    if (!notification || !notificationMessage) return;
    
    notificationMessage.textContent = message;
    notification.classList.add('show');
    
    setTimeout(() => {
        notification.classList.remove('show');
    }, duration);
}

// Make cart functions globally available
window.toggleCart = toggleCart;
window.closeCart = closeCart;
window.addToCart = addToCart;
window.updateCart = updateCart;
window.removeFromCart = removeFromCart;
window.updateQuantity = updateQuantity;
window.saveCart = saveCart;
window.showNotification = showNotification;
window.initCart = initCart;

// Initialize the application
document.addEventListener('DOMContentLoaded', function() {
    console.log('DOM fully loaded');
    
    // Initialize cart
    initCart();
    
    // Load products data
    if (typeof products === 'object' && Object.keys(products).length > 0) {
        console.log('Products already loaded:', Object.keys(products));
        setupEventListeners();
    } else {
        console.log('Loading products from products.js');
        // Try to load products from products.js
        try {
            // Check if products are defined in the global scope
            if (typeof products !== 'undefined') {
                console.log('Products found in global scope:', Object.keys(products));
                initializeCart();
                setupEventListeners();
            } else {
                console.error('Products not found in global scope');
                // Initialize cart anyway
                initializeCart();
                setupEventListeners();
            }
        } catch (error) {
            console.error('Error loading products:', error);
            // Initialize cart anyway
            initializeCart();
            setupEventListeners();
        }
    }

    function initializeCart() {
        console.log('Initializing cart with products:', products);
        updateCart();
    }
    
    function setupEventListeners() {
        console.log('Setting up event listeners');
        
        // Cart toggle
        const cartIcon = document.querySelector('.cart-icon');
        const closeCartBtn = document.querySelector('.close-cart');
        const cartOverlay = document.querySelector('.cart-overlay');
        
        console.log('Cart elements:', { cartIcon, closeCartBtn, cartOverlay });
        
        if (cartIcon) {
            cartIcon.addEventListener('click', function(e) {
                e.preventDefault();
                e.stopPropagation();
                console.log('Cart icon clicked');
                toggleCart();
            });
        } else {
            console.error('Cart icon not found');
        }
        
        if (closeCartBtn) {
            closeCartBtn.addEventListener('click', function(e) {
                e.preventDefault();
                e.stopPropagation();
                console.log('Close cart button clicked');
                closeCart();
            });
        } else {
            console.error('Close cart button not found');
        }
        
        if (cartOverlay) {
            cartOverlay.addEventListener('click', function(e) {
                e.preventDefault();
                console.log('Cart overlay clicked');
                closeCart();
            });
        } else {
            console.error('Cart overlay not found');
        }
        
        // Handle cart item interactions using event delegation
        document.addEventListener('click', function(e) {
            // Quantity buttons
            if (e.target.closest('.quantity-btn.plus')) {
                const button = e.target.closest('.quantity-btn.plus');
                const index = parseInt(button.dataset.index);
                console.log('Plus button clicked for index:', index);
                updateQuantity(index, 1);
                e.preventDefault();
                e.stopPropagation();
            } else if (e.target.closest('.quantity-btn.minus')) {
                const button = e.target.closest('.quantity-btn.minus');
                const index = parseInt(button.dataset.index);
                console.log('Minus button clicked for index:', index);
                updateQuantity(index, -1);
                e.preventDefault();
                e.stopPropagation();
            } 
            // Remove item button
            else if (e.target.closest('.remove-item')) {
                const button = e.target.closest('.remove-item');
                const index = parseInt(button.dataset.index);
                console.log('Remove button clicked for index:', index);
                removeFromCart(index);
                e.preventDefault();
                e.stopPropagation();
            }
        });
        
        // Handle add to cart buttons
        document.addEventListener('click', function(e) {
            const addToCartBtn = e.target.closest('.add-to-cart-btn');
            if (addToCartBtn) {
                const productId = addToCartBtn.dataset.productId;
                console.log('Add to cart button clicked for product:', productId);
                if (productId) {
                    const quantity = parseInt(document.getElementById('quantity')?.value) || 1;
                    // Find the product from the products object
                    const product = products[productId];
                    if (product) {
                        addToCart({
                            id: productId,
                            name: product.name,
                            price: product.price,
                            image: product.images ? product.images[0] : ''
                        }, quantity);
                        // Show the cart after adding an item
                        toggleCart();
                        // Show success notification
                        showNotification('Termék hozzáadva a kosárhoz!');
                    }
                }
                e.preventDefault();
                e.stopPropagation();
            }
        });
    }
        
        // Update total
        const total = cart.reduce((sum, item) => sum + (item.price * item.quantity), 0);
        cartTotal.textContent = `${total.toLocaleString()} Ft`;
        
        // Update cart count
        const cartCount = cart.reduce((count, item) => count + item.quantity, 0);
        const cartCountBadge = document.querySelector('.cart-count');
        if (cartCount > 0) {
            if (!cartCountBadge) {
                const badge = document.createElement('span');
                badge.className = 'cart-count';
                badge.textContent = cartCount;
                cartIcon.appendChild(badge);
            } else {
                cartCountBadge.textContent = cartCount;
            }
        } else if (cartCountBadge) {
            cartCountBadge.remove();
        }
    }
    
    // Add to cart
    function addToCart(product, quantity = 1) {
        const existingItem = cart.find(item => item.id === product.id);
        if (existingItem) {
            existingItem.quantity += quantity;
        } else {
            cart.push({ ...product, quantity });
        }
        saveCart();
        updateCart();
    }
    
    // Remove from cart
    function removeFromCart(index) {
        if (index >= 0 && index < cart.length) {
            cart.splice(index, 1);
            saveCart();
            updateCart();
        }
    }
    
    // Update quantity
    function updateQuantity(index, change) {
        if (index >= 0 && index < cart.length) {
            cart[index].quantity += change;
            if (cart[index].quantity < 1) {
                cart.splice(index, 1);
            }
            saveCart();
            updateCart();
        }
    }
    
    // Event Listeners for cart
    if (cartIcon) {
        cartIcon.addEventListener('click', (e) => {
            e.preventDefault();
            toggleCart();
        });
    }

    // Handle checkout button click using event delegation
    document.addEventListener('click', function(e) {
        // Don't process clicks on tab buttons
        if (e.target.closest('.tab-btn')) {
            return;
        }
        
        // Check if the clicked element or its parent has the checkout-btn class
        const checkoutBtn = e.target.closest('.checkout-btn');
        
        if (checkoutBtn) {
            console.log('Checkout button clicked');
            e.preventDefault();
            e.stopPropagation();
            
            if (cart && cart.length > 0) {
                console.log('Saving cart to localStorage and redirecting...');
                // Save cart to localStorage before redirecting
                localStorage.setItem('cart', JSON.stringify(cart));
                // Redirect to checkout page
                window.location.href = 'penztar.html';
            } else {
                console.log('Cart is empty');
                // Show a message if cart is empty
                showNotification('A kosár üres. Kérjük, adjon hozzá termékeket a kosarához!');
            }
        }
    });
    
    if (cartOverlay) cartOverlay.addEventListener('click', closeCart);
    if (closeCartBtn) closeCartBtn.addEventListener('click', closeCart);
    
    // Handle cart item interactions
    if (cartItemsContainer) {
        cartItemsContainer.addEventListener('click', (e) => {
            if (e.target.classList.contains('remove-item')) {
                const index = e.target.dataset.index;
                removeFromCart(parseInt(index));
            } else if (e.target.classList.contains('quantity-btn')) {
                const index = e.target.dataset.index;
                if (e.target.classList.contains('plus')) {
                    updateQuantity(parseInt(index), 1);
                } else if (e.target.classList.contains('minus')) {
                    updateQuantity(parseInt(index), -1);
                }
            }
        });
    }
    
    // Add product page links to product cards
    document.querySelectorAll('.category-card').forEach(card => {
        const productLink = document.createElement('a');
        productLink.className = 'product-link';
        productLink.textContent = 'Tovább a termékre';
        productLink.style.cssText = `
            display: inline-block;
            margin: 10px 0 25px 0;
            padding: 8px 16px;
            background-color: #7ed957;
            color: white;
            text-decoration: none;
            border-radius: 4px;
            text-align: center;
            transition: background-color 0.3s;
        `;
        productLink.onmouseover = () => productLink.style.backgroundColor = '#6bc04a';
        productLink.onmouseout = () => productLink.style.backgroundColor = '#7ed957';
        
        // Link to product page
        productLink.href = `product.html?product=${card.dataset.category}`;
        
        card.appendChild(productLink);
    });
    
    // Smooth scrolling for navigation links
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        anchor.addEventListener('click', function(e) {
            // Don't prevent default for cart link
            if (this.closest('.nav-links') && this.getAttribute('href') === '#cart') {
                e.preventDefault();
                toggleCart();
                return;
            }
            
            const targetId = this.getAttribute('href');
            if (targetId === '#' || targetId === '#cart') return;
            
            e.preventDefault();
            const targetElement = document.querySelector(targetId);
            if (targetElement) {
                window.scrollTo({
                    top: targetElement.offsetTop - 80, // Adjust for fixed header
                    behavior: 'smooth'
                });
            }
        });
    });

    // Update active link based on scroll position
    const sections = document.querySelectorAll('section[id]');
    const navLinks = document.querySelectorAll('.nav-links a');

    function updateActiveLink() {
        let current = '';
        
        sections.forEach(section => {
            const sectionTop = section.offsetTop;
            const sectionHeight = section.clientHeight;
            
            if (pageYOffset >= (sectionTop - 100)) {
                current = '#' + section.getAttribute('id');
            }
        });

        navLinks.forEach(link => {
            link.classList.remove('active');
            if (link.getAttribute('href') === current) {
                link.classList.add('active');
            }
        });
    }

    window.addEventListener('scroll', updateActiveLink);
    updateActiveLink(); // Run once on page load
    
    // Initialize product page if we're on the product page
    if (document.querySelector('.product-page')) {
        loadProductPage();
    }
    
    // Notification function
    function showNotification(message, duration = 3000) {
        const notification = document.getElementById('notification');
        const messageElement = document.getElementById('notification-message');
        
        if (notification && messageElement) {
            messageElement.textContent = message;
            notification.classList.add('show');
            
            // Hide after duration
            setTimeout(() => {
                notification.classList.remove('show');
            }, duration);
        } else {
            // Fallback to alert if notification elements not found
            alert(message);
        }
    }
    
    // Initialize cart and load from localStorage
    function initCart() {
        const savedCart = localStorage.getItem('cart');
        if (savedCart) {
            cart = JSON.parse(savedCart);
            // Ensure all cart items have required properties
            cart = cart.filter(item => item && item.id && products[item.id]);
            saveCart(); // Save the filtered cart back to localStorage
        }
        updateCart();
    }
    
    // Initialize cart
    initCart();
    
    // Handle checkout link click
    const checkoutLink = document.getElementById('checkout-link');
    if (checkoutLink) {
        checkoutLink.addEventListener('click', function(e) {
            e.preventDefault();
            console.log('Checkout link clicked');
            
            // Get current cart from localStorage
            const currentCart = JSON.parse(localStorage.getItem('cart')) || [];
            console.log('Current cart:', currentCart);
            
            if (currentCart && currentCart.length > 0) {
                console.log('Proceeding to checkout');
                // Ensure cart is saved
                localStorage.setItem('cart', JSON.stringify(currentCart));
                // Redirect to checkout page
                window.location.href = 'penztar.html';
            } else {
                console.log('Cart is empty');
                showNotification('A kosár üres. Kérjük, adjon hozzá termékeket a kosarához!');
            }
        });
    } else {
        console.error('Checkout link not found!');
    }

    // Debug: Check if cart elements exist
    console.log('Debug - Checking cart elements:');
    console.log('cartOverlay:', document.querySelector('.cart-overlay'));
    console.log('cartSidebar:', document.querySelector('.cart-sidebar'));
    console.log('checkoutBtn:', document.querySelector('.checkout-btn'));
    console.log('checkoutForm:', document.getElementById('checkout-form'));

    // Add a global function to test from console
    window.testCart = function() {
        console.log('=== Testing Cart ===');
        console.log('Cart contents:', JSON.parse(localStorage.getItem('cart') || '[]'));
        console.log('Cart elements:', {
            overlay: document.querySelector('.cart-overlay'),
            sidebar: document.querySelector('.cart-sidebar'),
            button: document.querySelector('.checkout-btn'),
            form: document.getElementById('checkout-form')
        });
    };
    
    // Function to load product page data
    function loadProductPage() {
        // Get product ID from URL
        const urlParams = new URLSearchParams(window.location.search);
        const productId = urlParams.get('product');
        
        console.log('Loading product page for ID:', productId);
        console.log('Available products:', Object.keys(products));
        
        if (!productId || !products[productId]) {
            console.error('Product not found');
            // Redirect to home page or show error
            window.location.href = 'index.html';
            return;
        }
        
        const product = products[productId];
        
        // Update page title
        document.title = `${product.name} - EnergiX`;
        
        // Update product details
        document.getElementById('productTitle').textContent = product.name;
        document.getElementById('productPrice').textContent = `${product.price.toLocaleString()} Ft`;
        document.getElementById('productDescription').innerHTML = `<p>${product.description}</p>`;
        
        // Set main image
        const mainImage = document.getElementById('productImage');
        console.log('Setting main image:', product.mainImage);
        mainImage.src = product.mainImage;
        mainImage.alt = product.name;
        
        // Log if image fails to load
        mainImage.onerror = function() {
            console.error('Failed to load image:', this.src);
        };
        
        // Create thumbnails
        const thumbnailsContainer = document.getElementById('productThumbnails');
        thumbnailsContainer.innerHTML = ''; // Clear any existing thumbnails
        
        product.images.forEach((image, index) => {
            const thumbnail = document.createElement('div');
            thumbnail.className = `thumbnail${index === 0 ? ' active' : ''}`;
            thumbnail.dataset.image = image;
            
            const img = document.createElement('img');
            console.log('Adding thumbnail:', image);
            img.src = image;
            img.alt = `${product.name} - Kép ${index + 1}`;
            
            // Log if thumbnail fails to load
            img.onerror = function() {
                console.error('Failed to load thumbnail:', this.src);
            };
            
            // Click handler for thumbnails
            thumbnail.addEventListener('click', () => {
                // Update main image
                mainImage.src = image;
                
                // Update active thumbnail
                document.querySelectorAll('.thumbnail').forEach(thumb => {
                    thumb.classList.remove('active');
                });
                thumbnail.classList.add('active');
                
                // Smooth transition
                mainImage.style.opacity = 0;
                setTimeout(() => {
                    mainImage.style.opacity = 1;
                }, 100);
            });
            
            thumbnail.appendChild(img);
            thumbnailsContainer.appendChild(thumbnail);
        });
        
        // Handle quantity controls
        const quantityInput = document.getElementById('quantity');
        const minusBtn = document.querySelector('.quantity-btn.minus');
        const plusBtn = document.querySelector('.quantity-btn.plus');
        
        if (minusBtn && plusBtn && quantityInput) {
            minusBtn.addEventListener('click', () => {
                const currentValue = parseInt(quantityInput.value) || 1;
                if (currentValue > 1) {
                    quantityInput.value = currentValue - 1;
                }
            });
            
            plusBtn.addEventListener('click', () => {
                const currentValue = parseInt(quantityInput.value) || 1;
                quantityInput.value = currentValue + 1;
            });
            
            // Prevent manual input of non-numbers or values below 1
            quantityInput.addEventListener('change', () => {
                let value = parseInt(quantityInput.value) || 1;
                if (value < 1) value = 1;
                quantityInput.value = value;
            });
        }
        
        // Update add to cart button
        const addToCartBtn = document.getElementById('addToCart');
        if (addToCartBtn) {
            addToCartBtn.addEventListener('click', () => {
                const quantity = parseInt(quantityInput.value) || 1;
                for (let i = 0; i < quantity; i++) {
                    addToCart(product);
                }
                showNotification(`${quantity}x ${product.name} hozzáadva a kosárhoz!`);
                
                // Update cart count in header
                updateCart();
            });
        }
    }
});
